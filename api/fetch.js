import cheerio from 'cheerio';

export default async function handler(req, res) {
  // ‚úÖ CORS fejl√©cek
  res.setHeader("Access-Control-Allow-Origin", "https://csanyi-m.github.io");
  res.setHeader("Access-Control-Allow-Methods", "POST, OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");

  // ‚úÖ Preflight v√°lasz
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  // ‚úÖ POST met√≥dus ellen≈ërz√©se
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Csak POST met√≥dus enged√©lyezett' });
  }

  const { ACCESS_PASSWORD } = process.env;
  const { url, password } = req.body;

  // ‚úÖ Jelsz√≥ ellen≈ërz√©s
  if (password !== ACCESS_PASSWORD) {
    return res.status(403).json({ error: 'Hib√°s jelsz√≥' });
  }

  try {
    // ‚úÖ HTML let√∂lt√©s √©s sz√∂veg kinyer√©s
    const response = await fetch(url);
    const html = await response.text();
    const $ = cheerio.load(html);
    const rawText = $('body').text();
    const cleanText = rawText.replace(/\s+/g, ' ').trim();

    console.log("üîç Bet√∂lt√∂tt sz√∂veg (els≈ë 500 karakter):", cleanText.slice(0, 500));

    // ‚úÖ Sz√∂veg visszak√ºld√©se
    res.status(200).json({ content: cleanText });

  } catch (err) {
    console.error("‚ùå Hiba:", err);
    res.status(500).json({ error: 'Nem siker√ºlt let√∂lteni vagy feldolgozni az oldalt' });
  }
}
